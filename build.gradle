buildscript {
  repositories {
	mavenCentral()
	maven {
		name = "GradleRIO"
		url = "http://dev.imjac.in/maven"
	}
  }
  dependencies {
      classpath group: 'jaci.openrio.gradle', name: 'GradleRIO', version: '+', classifier: 'Toast'
      classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M2'
  }
}

plugins {
    id 'java'
    id 'jacoco'
    id "com.github.kt3k.coveralls" version "2.7.1"
}

apply plugin: 'GradleRIO'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}

repositories {
    jcenter()
    maven {
        name = "Toast"
        url = "http://dev.imjac.in/maven"
    }
    maven {
        url  "http://dl.bintray.com/judgementcall5933/toast"
    }
}

dependencies {
    compile group: 'jaci.openrio.toast', name: 'Toast', version: '+'
    toastModule 'org.usfirst.frc5933:controller_feedback:+'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M2'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.0.0-M2'
}

gradlerio.team = "5933" // JudgeMent Call
gradlerio.deployFile = "toast/modules/${archivesBaseName}.jar"

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

project.afterEvaluate {
    def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')

    // configure jacoco to analyze the junitPlatformTest task
    jacoco {
        // this tool version is compatible with
        toolVersion = "0.7.6.201602180812"
        applyTo junitPlatformTestTask
    }

    // create junit platform jacoco task
    project.task(type: JacocoReport, "junitPlatformJacocoReport",
            {
                sourceDirectories = files("./src/main")
                classDirectories = files("$buildDir/classes/main")
                executionData junitPlatformTestTask
            })
}

