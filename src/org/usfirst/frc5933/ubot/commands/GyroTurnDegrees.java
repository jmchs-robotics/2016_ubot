// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5933.ubot.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc5933.ubot.Robot;

/**
 *
 */
public class GyroTurnDegrees extends Command {

	private double speed_ = 0;
	private double degrees_ = 0;
	private boolean useDumbDashboard_ = true;

	public GyroTurnDegrees(double speed, double degrees) {
		speed_ = speed;
		degrees_ = degrees;
		useDumbDashboard_ = false;
	}

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	public GyroTurnDegrees() {

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
		requires(Robot.driveTrain);

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

	}

	// Called just before this Command runs the first time
	protected void initialize() {
		if (useDumbDashboard_) {
			speed_ = .5;
			degrees_ = SmartDashboard.getNumber("Degrees for turning");
		}
		Robot.driveTrain.enableBrakeMode(true);
		// This call blocks execution, (not really ideal, but hey lets go with it for now)
		// so the operation will return finish during init, so there is no need for us
		// to call anything in execute. This allows us to return true for the isFinished
		// method since we will have finished the turn before isFinished has been called.
		Robot.driveTrain.turnDegrees(speed_ , degrees_);
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		return true;
	}

	// Called once after isFinished returns true
	protected void end() {
		Robot.driveTrain.enableBrakeMode(false);
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
		end();
	}
}
